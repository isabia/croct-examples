{
  "title": "Component template",
  "description": "A reusable template for importing components.",
  "options": {
    "id": {
      "type": "string",
      "description": "The component ID.",
      "required": true
    },
    "component": {
      "type": "string",
      "description": "The component name.",
      "required": true
    },
    "slotReference": {
      "type": "string",
      "description": "The variable name that holds the slot slug.",
      "required": true
    },
    "action": {
      "type": "object",
      "description": "Additional actions to execute.",
      "required": false
    }
  },
  "actions": [
    {
      "name": "define",
      "variables": {
        "registryUrl": "https://magicui.design/r/${options.id}.json"
      }
    },
    {
      "name": "test",
      "condition": "${project.platform === 'unknown'}",
      "then": [
        {
          "name": "print",
          "semantic": "info",
          "message": "No project found in the current directory",
        },
        {
          "name": "prompt",
          "type": "confirmation",
          "message": "Start a new project?",
          "default": true,
          "result": "createProject"
        },
        {
          "name": "test",
          "condition": "${this.createProject}",
          "then": [
            {
              "name": "define",
              "variables": {
                "projectName": "${options.id}-example"
              }
            },
            {
              "name": "import",
              "template": "croct:/croct/utils/filename-generator",
              "share": [
                "projectName"
              ],
              "options": {
                "reference": "projectName",
              }
            },
            {
              "name": "import",
              "template": "croct:/shadcn/project",
              "options": {
                "name": "${this.projectName}",
              }
            },
            {
              "name": "change-directory",
              "path": "${this.projectName}"
            }
          ],
          "else": {
            "name": "fail",
            "title": "Project not found",
            "message": "Unable to locate a project in the current directory.",
            "suggestions": [
              "Navigate to the project directory and try again."
            ]
          }
        }
      ],
    },
    {
      "name": "define",
      "variables": {
        "locate": {
          "name": "locate-file",
          "path": "**/${options.id}.{jsx,tsx}",
          "limit": 1,
          "depth": 10,
          "matcher": {
            "pattern": "export function ${options.component}"
          },
          "result": "componentPaths"
        }
      }
    },
    '${this.locate}',
    {
      "name": "test",
      "condition": "${this.componentPaths.length === 0}",
      "then": [
        {
          "name": "import",
          "template": "croct:/shadcn/ui/component",
          "options": {
            "components": [
              "${this.registryUrl}"
            ]
          }
        },
        '${this.locate}',
        {
          "name": "test",
          "condition": "${this.componentPaths.length === 0}",
          "then": {
            "name": "fail",
            "title": "Component not found",
            "message": "Unable to locate the file `${options.id}.{jsx,tsx}` with the component `${options.component}`.",
            "suggestions": [
              "Check the name of the file or the component.",
            ]
          }
        }
      ],
    },
    "${options.action}",
    {
      "name": "define",
      "variables": {
        "exampleFile": "${project.platform === 'nextjs' ? 'page' : 'example'}.${ext(this.componentPaths[0])}"
      }
    },
    {
      "name": "download",
      "source": "../${options.id}/code/${project.platform}/${this.exampleFile}",
      "destination": "${project.path.example}/${options.id}",
      "result": {
        "destination": "examplePath"
      }
    },
    {
      "name": "resolve-import",
      "target": "${this.componentPaths[0]}",
      "source": "${project.path.example}",
      "result": {
        "importPath": "importPath"
      }
    },
    {
      "name": "replace-file-content",
      "files": [
        {
          "path": "${this.examplePath}/${this.exampleFile}",
          "replacements": [
            {
              "pattern": "(?<=from )\"@/components/ui/${options.id}\"",
              "value": "\"${this.importPath}\""
            },
            {
              "pattern": "%slotId%",
              "value": "${this[options.slotReference]}"
            },
            {
              "pattern": "%workspaceUrl%",
              "value": "${project.workspace.url}"
            }
          ]
        }
      ]
    },
    {
      "name": "format-code",
      "files": [
        "${this.examplePath}/page.${ext(this.componentPaths[0])}"
      ]
    },
    {
      "name": "print",
      "semantic": "success",
      "message": "Component successfully imported at `${this.examplePath}`."
    },
    {
      "name": "test",
      "condition": "${project.server !== null && project.platform === 'nextjs'}",
      "then": [
        {
          "name": "prompt",
          "type": "confirmation",
          "message": "Open the example in the browser?",
          "default": false,
          "result": "openExample"
        },
        {
          "name": "test",
          "condition": "${this.openExample}",
          "then": [
            {
              "name": "start-server",
              "result": {
                "url": "serverUrl",
                "owned": "isServerOwned"
              }
            },
            {
              "name": "open-link",
              "url": "${this.serverUrl}${options.id}"
            },
            {
              "name": "print",
              "semantic": "info",
              "message": "The example is available at `${this.serverUrl}${options.id}`."
            },
            {
              "name": "test",
              "condition": "${this.isServerOwned}",
              "then": [
                {
                  "name": "prompt",
                  "type": "keypress",
                  "message": "Press any key to exit"
                },
                {
                  "name": "stop-server"
                }
              ]
            }
          ]
        }
      ]
    },
  ]
}
